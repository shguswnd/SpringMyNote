테스트는 이전에 객체를 함수를 통해 만들었지만
그게 아닌 테스트는 내가 여기서만 쓰로 다른곳에서 안쓰는 방식이니.

필드에 @Autowired를 사용한다.


    @AfterEach
    public void afterEach(){
        memberRepository.clearStore();
    }

이게 이제 필요없다.

이전에는 데이터를 넣고 다시 test 케이스 실행하면 데이터를 미는 함수를 만들어 처리하였는데
이제는!

@Transactional 어노테이션을 통해 트랜잭션 -> insert -> rollback 순으로 하여 데이터를 테스트 하지만
실직적으로 commit 되어 저장되지 않게 만들어 준다!.


그런데 @Transactional과 @SpringBootTest 이전의 단위테스트로 하는 이유는

속도면에서 스프링 켜지는거 자체가 순수 단위테스트 방식이 훨씬 높다
순수단위테스트가 훨씬 좋은 테스트일 확률이 더 높다.
