등록된 어노테이션을 사용해도 되지만 직접 어노테이션도 만들어본다

Application 파일 경로에 파일을 만들고 

@Configuration 작성 -> 


    @Bean
    public MemberService memberService(){
        return new MemberService(memberRepository());
    }

    @Bean
    public MemberRepository memberRepository(){
        return new MemoryMemberRepository();
    }

빈 등록 그러면 스프링은 메모리에 등록된 것들을 사용한다.


필드 주입
    @Autowired private MemberService memberService;

생성자 주입
    private  final MemberService memberService;

    @Autowired
    public MemberController(MemberService memberService) {
        this.memberService = memberService;
    }


필드 주입은 별로 안좋은 한번 쓰고 변경하기가 좋지않음

세터주입
    @Autowired
    public void setMemberService(MemberService memberService){
        this.memberService = memberService;
    }

생성은 알아서 되고 세터때 주입되고....

단점 : public으로 되어있다보니 중간에 누군가또는 개발자가  해킹? 의미없는 데이터 변경을 하여 정보 바꿀수도 있음
한번 셋팅하면 바꿀필요가 없는 데이터값이기 때문에 public을 사용하느 세터는 별로

조립되는 시점에 싱글콘 같이 생성자 주입이 가장 요즘 트랜드


빈을 만들어 사용하는 경우가 레포지토리의 DB 메모리에 따라 미리 구현해 놓은걸
DB 변경으로 바꾸게되면 많이 건드는데 그게 아닌
빈에서 레포지토리 이름만 바꿔 즉 조립때 메모리를 바꿔끼기만 하면 간편해짐


autowired는 반드시 스프링 컨테이너에 올라가는 것들만 사용이 가능하다.
