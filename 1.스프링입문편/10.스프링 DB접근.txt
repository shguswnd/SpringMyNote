h2데이터베이스 설치


https://www.h2database.com/html/download-archive.html
-> 다운로드 -> h2 압축 풀고 -> 파워쉘로 해당 경로의 bin 폴더 접근
-> h2.bat 파일 실행

만약에 이렇게했는데 접속이 안된다면 ip에서 localhost로만 바꿔주면 된다.


연결버튼으로 드렁오고 나갈때는 왼쪽 상단 버튼 클릭하면됨


홈경로에 test.mv.db 파일이 생성되었는지 확인하자!
C:\Users\USER


파일로 접근하면 웹 어플리케이션에서 접속이 안되는 경우가 있어서
파일 충돌이 난다는데?

파일직접 접근에서 소켓 접근으로 바꾼다.

JDBC URL에서 
jdbc:h2:tcp://localhost/~/test 이렇게 입력 후 접속하자!

만들어진 테이블을 아무내용없을때 마우스 클릭하면 select 문 자동으로 생성


자바에서 id 값이 long인건 db에서  bigint  를 사용한다.

generated by default as identity 값이 null이 들어오면 자동으로 값을 채워준다.


보통 고수들은 sql 폴더 만들고
ddl.sql 파일 만들어서 


drop table if exists member CASCADE;
create table member
(
 id bigint generated by default as identity,
 name varchar(255),
 primary key (id)
);

이러한 쿼리들을 보관한다.




-------------------------------------------------------------------------------------------
고대 개발자들의 순수 jdbc 사용 방법
build.gradle 파일에 jdbc, h2 데이터 베이스 관련 라이브러리 추가한다.

db 접속 정보를 스프링 부트에서는 다해준다고? 대박인데 이거는...

resource의 application.properties에서 아래의 내용들을 작성해주고 맨밑에 접속 정보는
h2의 경우 생략 가능하다
하지만 접속 정보 나는 써야되는데? 일단 쓰자

spring.datasource.url=jdbc:h2:tcp://localhost/~/test
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa


스프링의 경우 datasource를 스프링 메모리단에 생성후 주입받으며 
아래와 같이 스프링한테서 주입 받아 사용해야 한다.
주입받고 그걸 사용해서 
dataSource.getConnection()을 받아 연결할 수 있다.


    private final DataSource dataSource;

    public JdbcMemberRepository(DataSource dataSource) {
        this.dataSource = dataSource;
    }

내가 지금까지 배운것들이 정말 옛날 방식이구나...

참고용
DataSourceUtils.getConnection(dataSource);

이렇게 사용해줘야 이전에 데이터 사용하면서 트랜잭션이 걸릴수 있는데 
커넥션 유지를 시키기 위하여 사용



이제 완성된 jdbc member를 springConfig에서 갈아끼워주자!




!!!!!!!!!!!!!!!!!!!!!!!!!!!!

개방-폐쇄 원칙(OCP, Open-Closed Principle)
확장에는 열려있고, 수정, 변경에는 닫혀있다