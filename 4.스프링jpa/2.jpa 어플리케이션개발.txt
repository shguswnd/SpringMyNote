package hellojpa; 패키지에
JapMain 클래스를 만들고

psvm 자동완성하자

라이브러리를 
hibernate-community-dialects 
로 바꾸었다.


이제 테이블에 

member 테이블을 만든다.


이제 package hellojpa; 경로에 h2에 만들었던 테이블을 
Member 클래스로 동일하게 만들어 보자


jpa는 가장 중요한데 데이터가 변경되는 곳은 전부 트랜잭션 안에서 처리해야된다.


만약에 테이블의 이름과 클래스명칭이 다른걸 매핑하고 싶다면
@Table(name = "USER")
이렇게 사용하면 된다.

컬럼 이름또한 만약 다르다면
    @Column(name = "username")
이렇게 매핑이 가능하다.



jpa update 의 특이한 점으로 아래의 쿼리만으로 업데이트가 된다.

            Member findMember = em.find(Member.class, 1L);
            findMember.setName("HelloJPA");


jpa를 통해서 entity를 가져오면 얘는 jpa가 관리하고 
변경 여부를 트랙잭션 단위로 분석하여 알아서 update 쿼리를 날린다.


모든걸 검색 또는 특정 조건의 데이터만 검색시 jpql 를 사용한다.

쿼리를 직접 만들어서 사용하는데 그때
jpa는 쿼리를 Member 객체를 대상으로 쿼리를 만든다.


iter 사용해서 for 부르기.


그렇다면 
            List<Member> result = em.createQuery("select m from Member as m", Member.class)
                    .getResultList();

이렇게 쓰는게 과연 머가 좋을까???

예를 들면 페이징할때 좋다.

.setFirstResult(5)
.setMaxResults(8)
이걸 넣어주어 내가 원하는 쿼리를 바로바로 뽑아줄수있다.