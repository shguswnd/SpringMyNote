package hello.springmvc.basic; 에 LogTestController 클래스를 만들어준다.

@Controller를 사용하면 반환되는 메서드는 viewResover를 반환한다.
하지만 @RestController 를 사용하면 return 시 메소드의 리턴 변수를 반환한다.


로거의 장점으로 

        log.trace("trace log={}", name);
        log.debug("debug log={}", name);
        log.info("info log={}", name);
        log.warn("warn log={}", name);
        log.error(" error log={}", name);


로그의 레벨을 찍을수 있다.

로그 실행시, trace, debug는 안남았다. 왜?
내가 로컬에서 개발시 모든 로그를 보고싶다면
application.properties 에서 설정할 수 있다.
logging.level.hello.springmvc=trace
개발서버는 debug, 로컬은 trace로 해놓고, 운영은 info 레벨로 설정한다.
운영은 원인 에러까지만 찍는다
이렇게 서버의 조건에 따라 로그를 제한한다.

기본 로그 레벨은 info이다.

    private final Logger log = LoggerFactory.getLogger(getClass()); 
이게 쓰기 귀찮으면
@Slf4j 를 사용하면 된다.

로그를 할때
{}", name과
~~" + name을 사용하면 메모리 낭비가 됨.

