요청이 들어올때 was에 연결되며 서블릿 객체를 누가 호출할까??

쓰레드!!!
애플리케이션 코드를 하나하나 순차적으로 실행함.
자바 메인 메서드를 처음 실행하면 main이라는 이름의 쓰레드가 실행
쓰레드가 없다면 자바 애플리케이션 실행이 불가능
쓰레드는 한번에 하나의 코드 라인만 수행
동시 처리가 필요하면 쓰레드를 추가로 생성
쓰레드가 없으면 자바 애플리케이션 실행 자체가 불가능하다.


다중요청때 쓰레드가 하나라면?
1요청이 엄청난 지연됨 그때 2요청이 발생하는데 쓰레드가 하나면 두개다 지연되고 결국 서버 터진다.

그렇다면 요청이 올때마다 쓰레드 생성해서 해결??
단점들....
하지만 쓰레드를 계속 생성한다면 일단 비용이 비쌈(CPU도 많이씀)
쓰레드 생성 시간도 꽤 있기 때문에 응답속도 자체도 느려짐.
컨텍스트 스위칭 ?? cpu의 코어가 여러개지만 하나라고 칠때
실제로 쓰레드를 접근할때 코어는 하나씩 접근한다 속도가 빨라 동시처리로 느껴질뿐...
이때 코어가 쓰레드를 다른쓰레드로 전환할때 컨텍스트 스위칭이라고 한다.
이 비용이 있음.
쓰레드에 제한이 없다??
- 고객 요청이 많다.... 쓰레드 계속 생성 만개까지 생성되면 cpu 메모리가 죽는다.



해결법.
쓰레드 풀 : 미리 쓰레드 만들고 놀고있는 쓰레드를 필요할때 마다 꺼내서 쓰고
쓰레드가 다 사용되면 쓰레드 풀로 다시 가져다 놓는다.

그래서 was의 주요 튜닝은 최대 쓰레드 수이다.
그런데 만약에 최대 쓰레드 수를 넘겨 버리고 너무 많이 만들어 놓으면??
동시 요청이 많을 경우, cpu 의 메모리 임계점 넘으면 죽고 복구도 힘들다.

적정숫자를 어떻게 찾을까???
성능테스트를 해본다!.


그래서 결국 was의 최대 장점을 보면
멀티 쓰레드에 대한 부분은 전부 was가 처리해준다.
개발자는 쓰레트 풀의 개수만 설정하고 나머지는 신경 쓸 필요가 없다.
개발자는 빈, 서블릿 싱클톤 객체이기 때문에 was는 멀티쓰레드로 싱글톤 객체를 여러개 동시에 막 처리하기
때문에 공유되는 멤버변수들만 조심하면 문제없이 개발이 된다.