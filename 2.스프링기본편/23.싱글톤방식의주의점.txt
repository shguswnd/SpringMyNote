싱글톤 패턴이든, 스프링같은 싱글톤 컨테이너를 사용하든 객체 인스턴스를
하나만 생성해서 공유하는 싱글톤 방식은 여러 클라이언트가 하나의 같은
객체 인스턴스를 공유하기 때문에 싱글톤 객체는 상태를 유지하게 설계하면 안된다.


최대한 무상태로 설계해야된다.


싱글톤 패키지 밑에 StatefulService 만들고

컨트로 + 시프트 + t 로 테스트코드 만들자.


        //사용자 a가 주문하고 b사용자가 주문했다 그리고 a 사용자의 주문 금액을 확인하는데 2만원이 나온다
        //왜? ac.getBean(StatefulService.class); 들어가 보면 인스턴스는 둘다 같은 애를 사용한다.

해결법은 공유되지 않는 지역변수, 파라미터등을 사용한다.


StatefulService 에서 price  주석 
order 메소드를 int로 값을 바로 반환해주자.


컨트롤 + alt + v 로 테스트 코드에서 변수 바로 생성.