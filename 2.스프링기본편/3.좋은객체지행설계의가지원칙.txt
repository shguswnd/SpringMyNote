객체지향 특징
추상황, 캡슐화, 상속, 다형성



객체 지향 프로그래밍

객체지향프로그래밍은 컴퓨터 프로그램을 명령어의 목록으로 보는 시각에서 벗어나 여러개의 독립된 단위,
즉 "객체"들의 모임으로 파악하고자 하는 것이다. 각각의 객체는 메시지를 주고받고, 데이터를 처리할 수 있다.(협력)

객체지향프로그래밍은 프로그램을 유연하고 변경이 용이하게 만들기 때문에 대규모 소프트웨어 개발에 많이 사용된다.



유연하고, 변경이 용이?
레고 블럭 조립하듯이
키보드, 마우스 갈아 끼우듯이
컴퓨터 부품 갈아 끼우듯이
컴포넌트를 쉽고 유연하게 변경하면서 개발할 수 있는 방법

--> 다형성

다형성의  실세계 비유
실세계와 객체지향을 1:1 매칭 x
그래도 실세계의 비유로 이해하기에는 좋음
역할과 구현으로 세상을 구분

역할이 인터페이스고, 구현이 실제로 인터페이스 구현한 객체라 생각.


예시1

운전자가 자동차의 역할을 안다고 치자 그러면 자동차가 k3, 아반떼, 테슬라 어떠한 차가 되었든
운전자는 자동차의 역할을 알고 있기에 모든 차든 운전이 가능하다는것이다. 이렇게 유연하며

이제 운전자를 클라이언트라고 생각을하자
클라이언트가 자동차의 내부 구조를 몰라도된다. 그리고 구현된 애들이 내부적으로 바뀌더라도 
자동차 역할만 제대로 하고있다면 내부적으로 바뀌어도 클라이언트에 영향을 안준다.
이렇게 새로운 자동차가 나와도 클라이언트는 바꿀필요가 없다는 것이다.


예시2

공연무대에서 로미오역할과 줄리엣 역할이 있다
로미오는 장동건, 원빈이 가능하고, 줄리엣은 김태희, 송혜교가 가능하다
만약 모든 사람이 안된다면 각 역할들은 무명의 배우들이라도 시켜 가능하게 만들수 있다.
이 내용도 보면 역할과 구현을 나누었고, 그러면 변경가능한 대체 가능성이 생긴다.
이게 유연하고 변경에 용이하다는 뜻이다.

만약 로미오가 클라이언트고 줄리엣이 서버라고 치자. 줄리엣 구현이 바뀌더라도 로미오에 영향은 안미친다.
이렇듯 다른 대상으로 대체가 가능하다.


역할과 구현을 분리

역할과 구현으로 구분하면 세상이 단순해지고, 유연해지며 변경도 편리해진다.

장점.
클라이언트는 대상의 역할(인터페이스)만 알면 된다.
클라이언트는 구현 대상의 내부 구조를 몰라도 된다.
클라이언트는 구현 대상의 내부 구조가 변경되어도 영향을 받지 않는다.
클라이언트는 구현 대상 자체를 변경해도 영향을 받지 않는다.
-- 자동차가 전기차가 나와도 운전이 가능하다는것.



역할과 구현을 분리
(자바 언어)

자바언어의 다형성을 활용
- 역할 = 인터페이스
- 구현 = 인터페이스를 구현한 클래스, 구현 객체
객체를 설계할 때 역할과 구현을 명확히 분리
객체 설계시 역할(인터페이스)을 먼저 부여하고, 그 역할을 수행하는 구현 객체 만들기.
**역할이 중요하다.


객체의 협력이라는 관계부터 생각
혼자 있는 객체는 없다.
클라이언트:요청, 서버:응답
수많은 객체 클라이언트와 객체 서버는 서로 협력 관계를 가진다.
클라이언트는 요청하는 사람 서버는 요청을 받아서 응답하는 사람.



다형성의 본질
인터페이스를 구현한 객체 인스턴스를 실행 시점에 유연하게 변경할 수 있다.
다형성의 본질을 이해하려면 협력이라는 객체 사이의 관계에서 시작해야함.
클라이언트를 변경하지 않고, 서버의 구현 기능을 유연하게 변경할 수 있다.




역할과 구현을 분리
(정리)
실세계의 역할과 구현이라는 편리한 컨셉을 다형성을 통해 객체 세장으로 가져올 수 있음.
유연하고, 변경이 용이
확장 가능한 설계 -> 테슬라 전기차여도 운전 가능!
클라이언트에 영향을 주지않는 변경 가능
인터페이스를 안정적으로 잘 설계하는 것이 중요.


역할과 구현을 분리
(한계)
역할(인터페이스) 자체가 변하면, 클라이언트, 서버 모두에 큰 변경이 발생한다.
자동차를 비행기로 변경해야 한다면?
대본 자체가 변경된다면?
USB 인터페이스가 변경된다면?
인터페이스를 안정적으로 잘 설계하는 것이 중요



스프링과 객체 지향
다형성이 가장 중요하다!
스프링은 다형성을 극대화해서 이용할 수 있게 도와준다.
스프링에서 이야기하는 제어의 역전(Ioc), 의존관계 주입(DI)은 다형성을 활용해서 역할과
구현을 편리하게 다룰 수 있도록 지원한다.
스프링을 사용하면 마치 레고 블럭 조립하듯이! 공연 무대의 배우를 선택하듯이! 구현을 편리하게 변경할 수 있다.

